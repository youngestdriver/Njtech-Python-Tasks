'''
定义函数f, 实现将一个十六进制数转换为十进制数的功能。
函数原型: f(n), n表示一个十六进制数, 由0-9.A-F中的若干个符号组成, 其中A-F分别表示10-15。
转换方法: 各位数字分别乘以相应位上的权, 并累加求和。
例如十六进制7A3转换为十进制的过程为: 7*16^2+10*16^1+3*16^0
样例: 
输入: f(“7A3”)
输出: 1955
'''
def f(hex_str):
    # 定义一个映射，将十六进制的字符映射到它们的十进制值
    hex_to_dec = {'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7,
                  '8': 8, '9': 9, 'A': 10, 'B': 11, 'C': 12, 'D': 13, 'E': 14, 'F': 15}
    
    # 初始化十进制值
    dec_value = 0
    
    # 遍历十六进制字符串，从最高位到最低位
    for i, char in enumerate(reversed(hex_str)):
        # 将当前位的字符转换为十进制值，并乘以当前位的权重（16的i次幂）
        dec_value += hex_to_dec[char.upper()] * (16 ** i)
    
    return dec_value

# 测试样例
a=eval(input())
print(a)